# serverless.yml
service: ryanproject

provider:
  name: aws
  runtime: nodejs8.10
  region: us-west-2
  stage: ${opt:stage, "development"}

  environment:
    ACTIVE_TOURNAMENT_KEYS: ${self:provider.stage}-activeTournamentKeys


  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.ACTIVE_TOURNAMENT_KEYS}"

#lambdas 
functions: 
  testLambda:
    handler: source/test.handler
    events:
      - http:
          path: testLambda/{blahblah}
          method: get
          cors: true

#dynamos
resources:
  Resources:
    activeTournamentKeys:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.ACTIVE_TOURNAMENT_KEYS}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
   